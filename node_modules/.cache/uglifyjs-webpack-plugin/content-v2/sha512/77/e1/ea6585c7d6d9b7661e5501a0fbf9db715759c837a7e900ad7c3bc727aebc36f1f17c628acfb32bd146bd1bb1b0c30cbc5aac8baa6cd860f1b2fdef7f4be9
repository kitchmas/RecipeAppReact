{"map":"{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}","code":"webpackHotUpdate(0,{13:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\nexports.recipeDB = exports.auth = undefined;\\n\\nvar _firebase = __webpack_require__(48);\\n\\nvar _firebase2 = _interopRequireDefault(_firebase);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar config = {\\n  apiKey: \"AIzaSyD3VqMDrwMSCU6EEKmRNyJjCS-z1GeEUPw\",\\n  authDomain: \"recipe-app-249ae.firebaseapp.com\",\\n  databaseURL: \"https://recipe-app-249ae.firebaseio.com\",\\n  projectId: \"recipe-app-249ae\",\\n  storageBucket: \"recipe-app-249ae.appspot.com\",\\n  messagingSenderId: \"185755837363\"\\n};\\n\\nif (!_firebase2.default.apps.length) {\\n  _firebase2.default.initializeApp(config);\\n}\\n\\nvar auth = _firebase2.default.auth();\\nvar db = _firebase2.default.firestore();\\n\\nvar firestore = _firebase2.default.firestore();\\nvar settings = { timestampsInSnapshots: true };\\nfirestore.settings(settings);\\n\\nvar recipeDB = {\\n  saveRecipe: function saveRecipe(recipe) {\\n    var recipesCollection = firestore.collection(\\'Recipes\\');\\n\\n    if (!recipe) {\\n      throw new error(\"Cannot save a recipe of null\");\\n    }\\n\\n    recipesCollection.add(recipe).then(function (docRef) {\\n      return console.log(\"Recipe saved successfully\");\\n    }).catch(function (error) {\\n      return console.log(\"Error adding document: \", error);\\n    });\\n  },\\n  getRecipes: function getRecipes() {\\n    debugger;\\n    var recipesCollection = firestore.collection(\\'Recipes\\');\\n    recipesCollection.get().then(function (querySnapshot) {\\n      querySnapshot.forEach(function (doc) {\\n        return console.log(doc.data());\\n      });\\n    });\\n  }\\n};\\n\\nexports.auth = auth;\\nexports.recipeDB = recipeDB;\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2ZpcmViYXNlLmpzeD81Y2IzIl0sIm5hbWVzIjpbImNvbmZpZyIsImFwaUtleSIsImF1dGhEb21haW4iLCJkYXRhYmFzZVVSTCIsInByb2plY3RJZCIsInN0b3JhZ2VCdWNrZXQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsImFwcHMiLCJsZW5ndGgiLCJpbml0aWFsaXplQXBwIiwiYXV0aCIsImRiIiwiZmlyZXN0b3JlIiwic2V0dGluZ3MiLCJ0aW1lc3RhbXBzSW5TbmFwc2hvdHMiLCJyZWNpcGVEQiIsInNhdmVSZWNpcGUiLCJyZWNpcGUiLCJyZWNpcGVzQ29sbGVjdGlvbiIsImNvbGxlY3Rpb24iLCJlcnJvciIsImFkZCIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJnZXRSZWNpcGVzIiwiZ2V0IiwicXVlcnlTbmFwc2hvdCIsImZvckVhY2giLCJkb2MiLCJkYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztBQUVBLElBQU1BLFNBQVM7QUFDYkMsVUFBUSx5Q0FESztBQUViQyxjQUFZLGtDQUZDO0FBR2JDLGVBQWEseUNBSEE7QUFJYkMsYUFBVyxrQkFKRTtBQUtiQyxpQkFBZSw4QkFMRjtBQU1iQyxxQkFBbUI7QUFOTixDQUFmOztBQVNBLElBQUksQ0FBQyxtQkFBU0MsSUFBVCxDQUFjQyxNQUFuQixFQUEyQjtBQUN6QixxQkFBU0MsYUFBVCxDQUF1QlQsTUFBdkI7QUFDRDs7QUFFRCxJQUFNVSxPQUFPLG1CQUFTQSxJQUFULEVBQWI7QUFDQSxJQUFNQyxLQUFLLG1CQUFTQyxTQUFULEVBQVg7O0FBRUEsSUFBTUEsWUFBWSxtQkFBU0EsU0FBVCxFQUFsQjtBQUNBLElBQU1DLFdBQVcsRUFBRUMsdUJBQXVCLElBQXpCLEVBQWpCO0FBQ0FGLFVBQVVDLFFBQVYsQ0FBbUJBLFFBQW5COztBQUdBLElBQU1FLFdBQVc7QUFDZkMsWUFEZSxzQkFDSkMsTUFESSxFQUNJO0FBQ2pCLFFBQU1DLG9CQUFvQk4sVUFBVU8sVUFBVixDQUFxQixTQUFyQixDQUExQjs7QUFFQSxRQUFJLENBQUNGLE1BQUwsRUFBYTtBQUNYLFlBQU0sSUFBSUcsS0FBSixDQUFVLDhCQUFWLENBQU47QUFDRDs7QUFFREYsc0JBQWtCRyxHQUFsQixDQUFzQkosTUFBdEIsRUFDR0ssSUFESCxDQUNRO0FBQUEsYUFDSkMsUUFBUUMsR0FBUixDQUFZLDJCQUFaLENBREk7QUFBQSxLQURSLEVBSUdDLEtBSkgsQ0FJUztBQUFBLGFBQVNGLFFBQVFDLEdBQVIsQ0FBWSx5QkFBWixFQUF1Q0osS0FBdkMsQ0FBVDtBQUFBLEtBSlQ7QUFLRCxHQWJjO0FBY2ZNLFlBZGUsd0JBY0g7QUFDVjtBQUNBLFFBQU1SLG9CQUFvQk4sVUFBVU8sVUFBVixDQUFxQixTQUFyQixDQUExQjtBQUNFRCxzQkFBa0JTLEdBQWxCLEdBQXdCTCxJQUF4QixDQUE2Qix5QkFBaUI7QUFDNUNNLG9CQUFjQyxPQUFkLENBQXNCO0FBQUEsZUFDdEJOLFFBQVFDLEdBQVIsQ0FBWU0sSUFBSUMsSUFBSixFQUFaLENBRHNCO0FBQUEsT0FBdEI7QUFFRCxLQUhEO0FBSUg7QUFyQmMsQ0FBakI7O1FBMkJFckIsSSxHQUFBQSxJO1FBQ0FLLFEsR0FBQUEsUSIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZSc7XHJcblxyXG5jb25zdCBjb25maWcgPSB7XHJcbiAgYXBpS2V5OiBcIkFJemFTeUQzVnFNRHJ3TVNDVTZFRUttUk55SmpDUy16MUdlRVVQd1wiLFxyXG4gIGF1dGhEb21haW46IFwicmVjaXBlLWFwcC0yNDlhZS5maXJlYmFzZWFwcC5jb21cIixcclxuICBkYXRhYmFzZVVSTDogXCJodHRwczovL3JlY2lwZS1hcHAtMjQ5YWUuZmlyZWJhc2Vpby5jb21cIixcclxuICBwcm9qZWN0SWQ6IFwicmVjaXBlLWFwcC0yNDlhZVwiLFxyXG4gIHN0b3JhZ2VCdWNrZXQ6IFwicmVjaXBlLWFwcC0yNDlhZS5hcHBzcG90LmNvbVwiLFxyXG4gIG1lc3NhZ2luZ1NlbmRlcklkOiBcIjE4NTc1NTgzNzM2M1wiXHJcbn07XHJcblxyXG5pZiAoIWZpcmViYXNlLmFwcHMubGVuZ3RoKSB7XHJcbiAgZmlyZWJhc2UuaW5pdGlhbGl6ZUFwcChjb25maWcpO1xyXG59XHJcblxyXG5jb25zdCBhdXRoID0gZmlyZWJhc2UuYXV0aCgpO1xyXG5jb25zdCBkYiA9IGZpcmViYXNlLmZpcmVzdG9yZSgpO1xyXG5cclxuY29uc3QgZmlyZXN0b3JlID0gZmlyZWJhc2UuZmlyZXN0b3JlKCk7XHJcbmNvbnN0IHNldHRpbmdzID0geyB0aW1lc3RhbXBzSW5TbmFwc2hvdHM6IHRydWUgfTtcclxuZmlyZXN0b3JlLnNldHRpbmdzKHNldHRpbmdzKTtcclxuXHJcblxyXG5jb25zdCByZWNpcGVEQiA9IHtcclxuICBzYXZlUmVjaXBlKHJlY2lwZSkge1xyXG4gICAgY29uc3QgcmVjaXBlc0NvbGxlY3Rpb24gPSBmaXJlc3RvcmUuY29sbGVjdGlvbignUmVjaXBlcycpO1xyXG5cclxuICAgIGlmICghcmVjaXBlKSB7XHJcbiAgICAgIHRocm93IG5ldyBlcnJvcihcIkNhbm5vdCBzYXZlIGEgcmVjaXBlIG9mIG51bGxcIilcclxuICAgIH1cclxuXHJcbiAgICByZWNpcGVzQ29sbGVjdGlvbi5hZGQocmVjaXBlKVxyXG4gICAgICAudGhlbihkb2NSZWYgPT5cclxuICAgICAgICBjb25zb2xlLmxvZyhcIlJlY2lwZSBzYXZlZCBzdWNjZXNzZnVsbHlcIilcclxuICAgICAgKVxyXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coXCJFcnJvciBhZGRpbmcgZG9jdW1lbnQ6IFwiLCBlcnJvcikpO1xyXG4gIH0sXHJcbiAgZ2V0UmVjaXBlcygpe1xyXG4gICAgZGVidWdnZXI7XHJcbiAgICBjb25zdCByZWNpcGVzQ29sbGVjdGlvbiA9IGZpcmVzdG9yZS5jb2xsZWN0aW9uKCdSZWNpcGVzJyk7XHJcbiAgICAgIHJlY2lwZXNDb2xsZWN0aW9uLmdldCgpLnRoZW4ocXVlcnlTbmFwc2hvdCA9PiB7XHJcbiAgICAgICAgcXVlcnlTbmFwc2hvdC5mb3JFYWNoKGRvYyA9PlxyXG4gICAgICAgIGNvbnNvbGUubG9nKGRvYy5kYXRhKCkpKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCB7XHJcbiAgYXV0aCxcclxuICByZWNpcGVEQlxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///13\\n')}});","extractedComments":[]}