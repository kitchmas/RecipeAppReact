{"map":"{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}","code":"webpackHotUpdate(0,{61:function(module,exports,__webpack_require__){\"use strict\";eval(\"var _createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),_react=__webpack_require__(1),_react2=_interopRequireDefault(_react),_reactDom=__webpack_require__(59),_reactDom2=_interopRequireDefault(_reactDom),_reactRouterDom=__webpack_require__(92),_firebase=__webpack_require__(15),_IdCreator=__webpack_require__(37),_RecipeItem=__webpack_require__(36),_RecipeForm=__webpack_require__(32),_RecipeView=__webpack_require__(27),_nav=__webpack_require__(26),_ShoppingList=__webpack_require__(21),_login=__webpack_require__(20),_reactTextareaAutosize=__webpack_require__(11),_reactTextareaAutosize2=_interopRequireDefault(_reactTextareaAutosize),_recipes2=__webpack_require__(94);function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError('this hasn\\\\'t been initialised - super() hasn\\\\'t been called');return b&&('object'==typeof b||'function'==typeof b)?b:a}function _inherits(a,b){if('function'!=typeof b&&null!==b)throw new TypeError('Super expression must either be null or a function, not '+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var RecipePage=function(a){function b(a){_classCallCheck(this,b);var c=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,a));return c.state={isLoading:!0,authUser:null,currentView:1,views:{gridLayout:1,listLayout:2,createRecipe:3,editRecipe:4,viewRecipe:5},selectedRecipe:{},recipes:[],newRecipe:{name:'',description:'',newIngredientName:'',method:'',ingredients:[]},creatingShoppingList:!1,shoppingList:null},c.onSubmit=c.onSubmit.bind(c),c.createRecipe=c.createRecipe.bind(c),c.recipeClicked=c.recipeClicked.bind(c),c.editRecipe=c.editRecipe.bind(c),c.gridLayout=c.gridLayout.bind(c),c.listLayout=c.listLayout.bind(c),c.createShoppingListClicked=c.createShoppingListClicked.bind(c),c.addShoppingListExtras=c.addShoppingListExtras.bind(c),c.logOutClicked=c.logOutClicked.bind(c),c.saveShoppingList=c.saveShoppingList.bind(c),c.newShoppingList=c.newShoppingList.bind(c),c.deleteShoppingListIngredient=c.deleteShoppingListIngredient.bind(c),c.deleteShoppingListExtra=c.deleteShoppingListExtra.bind(c),c.crossOutShoppingListIngredient=c.crossOutShoppingListIngredient.bind(c),c.crossOutShoppingListExtra=c.crossOutShoppingListExtra.bind(c),c}return _inherits(b,a),_createClass(b,[{key:'showLoading',value:function showLoading(){this.setState({isLoading:!0})}},{key:'hideLoading',value:function hideLoading(){this.setState({isLoading:!1})}},{key:'getRecipes',value:function getRecipes(){var a=this;this.showLoading(),_firebase.firestore.collection('Recipes').get().then(function(b){var c=b.docs.map(function(a){var b=a.data();return b.id=a.id,b});a.setState(function(a){return{recipes:c,currentView:a.views.gridLayout}}),a.hideLoading()})}},{key:'getShoppingList',value:function getShoppingList(a){var b=this;this.showLoading(),_firebase.firestore.collection('ShoppingList').where('shoppingListUsed','==',!1).get().then(function(c){if(1===c.docs.length){var d=c.docs[0].data();b.setState({shoppingList:d}),a&&a(),b.hideLoading()}else b.createNewShoppingList()})}},{key:'createNewShoppingList',value:function createNewShoppingList(){var a=this,b=new Date,c=_IdCreator.IdCreator.createAutoId(),d={id:c,dateCreated:b,shoppingListUsed:!1,shoppingListIngredients:[],shoppingListExtras:[]};this.showLoading(),_firebase.firestore.collection('ShoppingList').doc(d.id).set(d).then(function(){console.log('ShoppingListSaved saved successfully'),a.setState({shoppingList:d}),a.hideLoading()}).catch(function(a){return console.log('Error adding document: ',a)})}},{key:'saveShoppingList',value:function saveShoppingList(){var a=this.state.shoppingList;a.id&&_firebase.firestore.collection('ShoppingList').doc(a.id).set(a).then(function(){}).catch(function(a){return console.log('Error adding document: ',a)})}},{key:'newShoppingList',value:function newShoppingList(){var a=confirm('Are you sure you would like to start a new shopping list?');if(a){var b=this.state.shoppingList;b.shoppingListUsed=!0,this.setState({shoppingList:b}),this.saveShoppingList()}else return}},{key:'deleteShoppingListIngredient',value:function deleteShoppingListIngredient(a){var b=Object.assign({},this.state.shoppingList);-1<a&&b.shoppingListIngredients.splice(a,1),this.setState({shoppingList:b})}},{key:'crossOutShoppingListIngredient',value:function crossOutShoppingListIngredient(a){var b=this,c=Object.assign({},this.state.shoppingList);-1<a&&(c.shoppingListIngredients[parseInt(a)].crossedOut=!c.shoppingListIngredients[parseInt(a)].crossedOut),this.setState({shoppingList:c},function(){b.saveShoppingList()})}},{key:'deleteShoppingListExtra',value:function deleteShoppingListExtra(a){var b=this,c=Object.assign({},this.state.shoppingList);-1<a&&c.shoppingListExtras.splice(a,1),this.setState({shoppingList:c},function(){b.saveShoppingList()})}},{key:'crossOutShoppingListExtra',value:function crossOutShoppingListExtra(a){var b=this,c=Object.assign({},this.state.shoppingList);-1<a&&(c.shoppingListExtras[parseInt(a)].crossedOut=!c.shoppingListExtras[parseInt(a)].crossedOut),this.setState({shoppingList:c},function(){b.saveShoppingList()})}},{key:'createRecipe',value:function createRecipe(){this.setState(function(a){return{currentView:a.views.createRecipe}})}},{key:'recipeClicked',value:function recipeClicked(a){var b=this.state.recipes.find(function(b){return b.id===a});if(this.state.creatingShoppingList){var c=JSON.parse(JSON.stringify(this.state.shoppingList)),d=c.shoppingListIngredients,e=JSON.parse(JSON.stringify(b.ingredients));if(0<d.length){var f=e.filter(function(a){return d.some(function(b){return b.name===a.name})});d.forEach(function(a){var b=f.find(function(b){return a.name===b.name});b&&(a.amount=+a.amount+ +b.amount)});var g=e.filter(function(a){return!d.some(function(b){return b.name===a.name})});c.shoppingListIngredients=[].concat(_toConsumableArray(d),_toConsumableArray(g)),this.setState(function(){return{shoppingList:c}})}else c.shoppingListIngredients=e,this.setState(function(){return{shoppingList:c}})}else this.setState(function(a){return{currentView:a.views.viewRecipe,selectedRecipe:b}})}},{key:'editRecipe',value:function editRecipe(a){var b=this.state.recipes.find(function(b){return b.id===a});this.setState(function(a){return{currentView:a.views.editRecipe,selectedRecipe:b}})}},{key:'onSubmit',value:function onSubmit(a){var b=this;if(this.state.currentView===this.state.views.createRecipe){this.state.recipes.slice();this.showLoading(),_firebase.firestore.collection('Recipes').doc().set(a).then(function(){console.log('Recipe saved successfully'),b.showLoading(),b.getRecipes()}).catch(function(a){return console.log('Error adding document: ',a)})}else if(this.state.currentView===this.state.views.editRecipe){var c=a,d=this.state.recipes.slice(),e=d.findIndex(function(a){return a.id===c.id});d[e]=c,this.setState(function(a){return{recipes:d,currentView:a.views.gridLayout}})}}},{key:'gridLayout',value:function gridLayout(){this.setState(function(a){return{currentView:a.views.gridLayout}})}},{key:'listLayout',value:function listLayout(){this.setState(function(a){return{currentView:a.views.listLayout}})}},{key:'createShoppingListClicked',value:function createShoppingListClicked(){var a=this;this.state.creatingShoppingList||this.state.shoppingList?this.setState(function(a){return{creatingShoppingList:!a.creatingShoppingList}}):this.getShoppingList(function(){a.setState(function(a){return{creatingShoppingList:!a.creatingShoppingList}})})}},{key:'addShoppingListExtras',value:function addShoppingListExtras(a){var b=this;if(a){var c=this.state.shoppingList;c.shoppingListExtras=a,this.setState({shoppingList:c},function(){b.saveShoppingList()})}else return}},{key:'logOutClicked',value:function logOutClicked(a){a.preventDefault(),_firebase.auth.signOut()}},{key:'componentDidMount',value:function componentDidMount(){var a=this;this.setState({isLoading:!1}),_firebase.auth.onAuthStateChanged(function(b){b?(a.setState(function(){return{authUser:b}}),a.getRecipes()):a.setState(function(){return{authUser:null}})})}},{key:'render',value:function render(){return this.state.authUser?_react2.default.createElement(_reactRouterDom.BrowserRouter,null,_react2.default.createElement('div',null,_react2.default.createElement(_nav.RecipeNav,null),_react2.default.createElement(_reactRouterDom.Route,{exact:!0,path:'/',component:_recipes2.Recipes,recipes:this.state.recipes}))):_react2.default.createElement(_login.Login,null)}}]),b}(_react2.default.Component);_reactDom2.default.render(_react2.default.createElement(RecipePage,null),document.getElementById('root'));\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///61\\n\")}});","extractedComments":[]}