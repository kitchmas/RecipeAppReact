{"map":"{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}","code":"webpackHotUpdate(0,{13:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\nexports.recipeDB = exports.auth = undefined;\\n\\nvar _firebase = __webpack_require__(48);\\n\\nvar _firebase2 = _interopRequireDefault(_firebase);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar config = {\\n  apiKey: \"AIzaSyD3VqMDrwMSCU6EEKmRNyJjCS-z1GeEUPw\",\\n  authDomain: \"recipe-app-249ae.firebaseapp.com\",\\n  databaseURL: \"https://recipe-app-249ae.firebaseio.com\",\\n  projectId: \"recipe-app-249ae\",\\n  storageBucket: \"recipe-app-249ae.appspot.com\",\\n  messagingSenderId: \"185755837363\"\\n};\\n\\nif (!_firebase2.default.apps.length) {\\n  _firebase2.default.initializeApp(config);\\n}\\n\\nvar auth = _firebase2.default.auth();\\nvar db = _firebase2.default.firestore();\\n\\nvar firestore = _firebase2.default.firestore();\\nvar settings = { timestampsInSnapshots: true };\\nfirestore.settings(settings);\\n\\nvar recipeDB = {\\n  saveRecipe: function saveRecipe(recipe) {\\n    var recipesCollection = firestore.collection(\\'Recipes\\');\\n\\n    if (!recipe) {\\n      throw new error(\"Cannot save a recipe of null\");\\n    }\\n\\n    recipesCollection.add(recipe).then(function (docRef) {\\n      return console.log(\"Recipe saved successfully\");\\n    }).catch(function (error) {\\n      return console.log(\"Error adding document: \", error);\\n    });\\n  },\\n  getRecipes: function getRecipes(callback) {\\n    debugger;\\n    var recipesCollection = firestore.collection(\\'Recipes\\');\\n    var recipes = void 0;\\n    recipesCollection.get().then(function (querySnapshot) {\\n      callback(querySnapshot.docs.map(function (doc) {\\n        return doc.data();\\n      }));\\n    });\\n    return recipes;\\n  }\\n};\\n\\nexports.auth = auth;\\nexports.recipeDB = recipeDB;\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2ZpcmViYXNlLmpzeD81Y2IzIl0sIm5hbWVzIjpbImNvbmZpZyIsImFwaUtleSIsImF1dGhEb21haW4iLCJkYXRhYmFzZVVSTCIsInByb2plY3RJZCIsInN0b3JhZ2VCdWNrZXQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsImFwcHMiLCJsZW5ndGgiLCJpbml0aWFsaXplQXBwIiwiYXV0aCIsImRiIiwiZmlyZXN0b3JlIiwic2V0dGluZ3MiLCJ0aW1lc3RhbXBzSW5TbmFwc2hvdHMiLCJyZWNpcGVEQiIsInNhdmVSZWNpcGUiLCJyZWNpcGUiLCJyZWNpcGVzQ29sbGVjdGlvbiIsImNvbGxlY3Rpb24iLCJlcnJvciIsImFkZCIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJnZXRSZWNpcGVzIiwiY2FsbGJhY2siLCJyZWNpcGVzIiwiZ2V0IiwicXVlcnlTbmFwc2hvdCIsImRvY3MiLCJtYXAiLCJkb2MiLCJkYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztBQUVBLElBQU1BLFNBQVM7QUFDYkMsVUFBUSx5Q0FESztBQUViQyxjQUFZLGtDQUZDO0FBR2JDLGVBQWEseUNBSEE7QUFJYkMsYUFBVyxrQkFKRTtBQUtiQyxpQkFBZSw4QkFMRjtBQU1iQyxxQkFBbUI7QUFOTixDQUFmOztBQVNBLElBQUksQ0FBQyxtQkFBU0MsSUFBVCxDQUFjQyxNQUFuQixFQUEyQjtBQUN6QixxQkFBU0MsYUFBVCxDQUF1QlQsTUFBdkI7QUFDRDs7QUFFRCxJQUFNVSxPQUFPLG1CQUFTQSxJQUFULEVBQWI7QUFDQSxJQUFNQyxLQUFLLG1CQUFTQyxTQUFULEVBQVg7O0FBRUEsSUFBTUEsWUFBWSxtQkFBU0EsU0FBVCxFQUFsQjtBQUNBLElBQU1DLFdBQVcsRUFBRUMsdUJBQXVCLElBQXpCLEVBQWpCO0FBQ0FGLFVBQVVDLFFBQVYsQ0FBbUJBLFFBQW5COztBQUdBLElBQU1FLFdBQVc7QUFDZkMsWUFEZSxzQkFDSkMsTUFESSxFQUNJO0FBQ2pCLFFBQU1DLG9CQUFvQk4sVUFBVU8sVUFBVixDQUFxQixTQUFyQixDQUExQjs7QUFFQSxRQUFJLENBQUNGLE1BQUwsRUFBYTtBQUNYLFlBQU0sSUFBSUcsS0FBSixDQUFVLDhCQUFWLENBQU47QUFDRDs7QUFFREYsc0JBQWtCRyxHQUFsQixDQUFzQkosTUFBdEIsRUFDR0ssSUFESCxDQUNRO0FBQUEsYUFDSkMsUUFBUUMsR0FBUixDQUFZLDJCQUFaLENBREk7QUFBQSxLQURSLEVBSUdDLEtBSkgsQ0FJUztBQUFBLGFBQVNGLFFBQVFDLEdBQVIsQ0FBWSx5QkFBWixFQUF1Q0osS0FBdkMsQ0FBVDtBQUFBLEtBSlQ7QUFLRCxHQWJjO0FBY2ZNLFlBZGUsc0JBY0pDLFFBZEksRUFjSztBQUNsQjtBQUNBLFFBQU1ULG9CQUFvQk4sVUFBVU8sVUFBVixDQUFxQixTQUFyQixDQUExQjtBQUNBLFFBQUlTLGdCQUFKO0FBQ0FWLHNCQUFrQlcsR0FBbEIsR0FBd0JQLElBQXhCLENBQTZCLHlCQUFpQjtBQUMxQ0ssZUFBU0csY0FBY0MsSUFBZCxDQUFtQkMsR0FBbkIsQ0FBdUI7QUFBQSxlQUFPQyxJQUFJQyxJQUFKLEVBQVA7QUFBQSxPQUF2QixDQUFUO0FBQ0QsS0FGSDtBQUdFLFdBQU9OLE9BQVA7QUFDSDtBQXRCYyxDQUFqQjs7UUE0QkVsQixJLEdBQUFBLEk7UUFDQUssUSxHQUFBQSxRIiwiZmlsZSI6IjEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZpcmViYXNlIGZyb20gJ2ZpcmViYXNlJztcclxuXHJcbmNvbnN0IGNvbmZpZyA9IHtcclxuICBhcGlLZXk6IFwiQUl6YVN5RDNWcU1EcndNU0NVNkVFS21STnlKakNTLXoxR2VFVVB3XCIsXHJcbiAgYXV0aERvbWFpbjogXCJyZWNpcGUtYXBwLTI0OWFlLmZpcmViYXNlYXBwLmNvbVwiLFxyXG4gIGRhdGFiYXNlVVJMOiBcImh0dHBzOi8vcmVjaXBlLWFwcC0yNDlhZS5maXJlYmFzZWlvLmNvbVwiLFxyXG4gIHByb2plY3RJZDogXCJyZWNpcGUtYXBwLTI0OWFlXCIsXHJcbiAgc3RvcmFnZUJ1Y2tldDogXCJyZWNpcGUtYXBwLTI0OWFlLmFwcHNwb3QuY29tXCIsXHJcbiAgbWVzc2FnaW5nU2VuZGVySWQ6IFwiMTg1NzU1ODM3MzYzXCJcclxufTtcclxuXHJcbmlmICghZmlyZWJhc2UuYXBwcy5sZW5ndGgpIHtcclxuICBmaXJlYmFzZS5pbml0aWFsaXplQXBwKGNvbmZpZyk7XHJcbn1cclxuXHJcbmNvbnN0IGF1dGggPSBmaXJlYmFzZS5hdXRoKCk7XHJcbmNvbnN0IGRiID0gZmlyZWJhc2UuZmlyZXN0b3JlKCk7XHJcblxyXG5jb25zdCBmaXJlc3RvcmUgPSBmaXJlYmFzZS5maXJlc3RvcmUoKTtcclxuY29uc3Qgc2V0dGluZ3MgPSB7IHRpbWVzdGFtcHNJblNuYXBzaG90czogdHJ1ZSB9O1xyXG5maXJlc3RvcmUuc2V0dGluZ3Moc2V0dGluZ3MpO1xyXG5cclxuXHJcbmNvbnN0IHJlY2lwZURCID0ge1xyXG4gIHNhdmVSZWNpcGUocmVjaXBlKSB7XHJcbiAgICBjb25zdCByZWNpcGVzQ29sbGVjdGlvbiA9IGZpcmVzdG9yZS5jb2xsZWN0aW9uKCdSZWNpcGVzJyk7XHJcblxyXG4gICAgaWYgKCFyZWNpcGUpIHtcclxuICAgICAgdGhyb3cgbmV3IGVycm9yKFwiQ2Fubm90IHNhdmUgYSByZWNpcGUgb2YgbnVsbFwiKVxyXG4gICAgfVxyXG5cclxuICAgIHJlY2lwZXNDb2xsZWN0aW9uLmFkZChyZWNpcGUpXHJcbiAgICAgIC50aGVuKGRvY1JlZiA9PlxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiUmVjaXBlIHNhdmVkIHN1Y2Nlc3NmdWxseVwiKVxyXG4gICAgICApXHJcbiAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhcIkVycm9yIGFkZGluZyBkb2N1bWVudDogXCIsIGVycm9yKSk7XHJcbiAgfSxcclxuICBnZXRSZWNpcGVzKGNhbGxiYWNrKXtcclxuICAgIGRlYnVnZ2VyO1xyXG4gICAgY29uc3QgcmVjaXBlc0NvbGxlY3Rpb24gPSBmaXJlc3RvcmUuY29sbGVjdGlvbignUmVjaXBlcycpO1xyXG4gICAgbGV0IHJlY2lwZXM7IFxyXG4gICAgcmVjaXBlc0NvbGxlY3Rpb24uZ2V0KCkudGhlbihxdWVyeVNuYXBzaG90ID0+IHtcclxuICAgICAgICBjYWxsYmFjayhxdWVyeVNuYXBzaG90LmRvY3MubWFwKGRvYyA9PiBkb2MuZGF0YSgpKSlcclxuICAgICAgfSk7XHJcbiAgICAgIHJldHVybiByZWNpcGVzO1xyXG4gIH1cclxufVxyXG5cclxuXHJcblxyXG5leHBvcnQge1xyXG4gIGF1dGgsXHJcbiAgcmVjaXBlREJcclxufTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///13\\n')}});","extractedComments":[]}