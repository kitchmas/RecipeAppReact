{"map":"{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}","code":"webpackHotUpdate(0,{33:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactDom = __webpack_require__(31);\\n\\nvar _reactDom2 = _interopRequireDefault(_reactDom);\\n\\nvar _RecipeItem = __webpack_require__(21);\\n\\nvar _RecipeForm = __webpack_require__(17);\\n\\nvar _RecipeView = __webpack_require__(12);\\n\\nvar _reactTextareaAutosize = __webpack_require__(6);\\n\\nvar _reactTextareaAutosize2 = _interopRequireDefault(_reactTextareaAutosize);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar RecipePage = function (_React$Component) {\\n  _inherits(RecipePage, _React$Component);\\n\\n  function RecipePage(props) {\\n    _classCallCheck(this, RecipePage);\\n\\n    var _this = _possibleConstructorReturn(this, (RecipePage.__proto__ || Object.getPrototypeOf(RecipePage)).call(this, props));\\n\\n    _this.state = {\\n      currentView: \"allRecipies\",\\n      selectedRecipe: {},\\n      newIngredientName: \"AA\",\\n      recipes: [{\\n        id: 1,\\n        name: \"Cheese cake\",\\n        description: \"Cheese based cake\",\\n        method: \"Step 1 Cook, Step 2 eat\",\\n        ingredients: [\"Cheese\", \"Cake\"]\\n      }, {\\n        id: 2,\\n        name: \"Banana bread\",\\n        description: \"Banana based bread\",\\n        newIngredientName: \"\",\\n        method: \"Step 1 Cook, Step 2 eat\",\\n        ingredients: [\"Banana\", \"Bread\"]\\n      }, {\\n        id: 3,\\n        name: \"Key lime pie\",\\n        description: \"Key based pie\",\\n        newIngredientName: \"\",\\n        method: \"Step 1 Cook, Step 2 eat\",\\n        ingredients: [\"Key\", \"Lime\", \"Pie\"]\\n      }],\\n      newRecipe: {\\n        id: \"\",\\n        name: \"\",\\n        description: \"\",\\n        newIngredientName: \"\",\\n        method: \"\",\\n        ingredients: []\\n      }\\n    };\\n    _this.addIngredient = _this.addIngredient.bind(_this);\\n    _this.onSubmit = _this.onSubmit.bind(_this);\\n    _this.createRecipe = _this.createRecipe.bind(_this);\\n    _this.handleInputChanged = _this.handleInputChanged.bind(_this);\\n    _this.ingredientOnDelete = _this.ingredientOnDelete.bind(_this);\\n    _this.showRecipe = _this.showRecipe.bind(_this);\\n    _this.editRecipe = _this.editRecipe.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(RecipePage, [{\\n    key: \\'handleInputChanged\\',\\n    value: function handleInputChanged(event) {\\n      var target = event.target;\\n      var value = target.type === \\'checkbox\\' ? target.checked : target.value;\\n      var name = target.name;\\n      //ADD THE CHECK HERE FOR NEW INGREDIENT NAME IT IS NOT IN AND OBJECT\\n\\n      if (this.state.createRecipe === \"createRecipe\") {\\n        var newRecipe = Object.assign({}, this.state.newRecipe);\\n        newRecipe[name] = value;\\n        this.setState({ newRecipe: newRecipe });\\n      } else if (this.state.currentView === \"editRecipe\") {\\n        this.setState({ newIngredientName: value });\\n      } else {\\n        var selectedRecipe = Object.assign({}, this.state.selectedRecipe);\\n        selectedRecipe[name] = value;\\n        this.setState({ selectedRecipe: selectedRecipe });\\n      }\\n    }\\n  }, {\\n    key: \\'ingredientOnDelete\\',\\n    value: function ingredientOnDelete(index) {\\n      var ingredients = this.state.newRecipe.ingredients.slice(),\\n          newRecipe;\\n\\n      if (index > -1) {\\n        ingredients.splice(index, 1);\\n      }\\n      newRecipe = Object.assign({}, this.state.newRecipe);\\n      newRecipe.ingredients = ingredients;\\n      this.setState({ newRecipe: newRecipe });\\n    }\\n  }, {\\n    key: \\'addIngredient\\',\\n    value: function addIngredient() {\\n      if (this.state.newIngredientName) {\\n        var ingredients = this.state.newRecipe.ingredients.slice(),\\n            newIngredientName = this.state.newIngredientName,\\n            newRecipe,\\n            selectedRecipe;\\n\\n        ingredients.push(newIngredientName);\\n        if (this.state.currentView == \"createRecipe\") {\\n          newRecipe = Object.assign({}, this.state.newRecipe);\\n          newRecipe.ingredients = ingredients;\\n          this.setState({\\n            newRecipe: newRecipe,\\n            newIngredientName: \"\"\\n          });\\n        } else {\\n          selectedRecipe = Object.assign({}, this.state.selectedRecipe);\\n          selectedRecipe.ingredients = ingredients;\\n          this.setState({\\n            newRecipe: newRecipe,\\n            selectedRecipe: \"\"\\n          });\\n        }\\n      } else {\\n        return;\\n      }\\n    }\\n  }, {\\n    key: \\'createRecipe\\',\\n    value: function createRecipe() {\\n      this.setState({\\n        currentView: \"createRecipe\"\\n      });\\n    }\\n  }, {\\n    key: \\'showRecipe\\',\\n    value: function showRecipe(recipeId) {\\n      var selectedRecipe = this.state.recipes.find(function (recipe) {\\n        return recipe.id === recipeId;\\n      });\\n      this.setState({\\n        currentView: \"viewRecipe\",\\n        selectedRecipe: selectedRecipe\\n      });\\n    }\\n  }, {\\n    key: \\'editRecipe\\',\\n    value: function editRecipe(recipeId) {\\n      var selectedRecipe = this.state.recipes.find(function (recipe) {\\n        return recipe.id === recipeId;\\n      });\\n      this.setState({\\n        currentView: \"editRecipe\",\\n        selectedRecipe: selectedRecipe\\n      });\\n      console.log(this.state.selectedRecipe);\\n    }\\n  }, {\\n    key: \\'onSubmit\\',\\n    value: function onSubmit(recipe) {\\n      if (this.state.currentView === \"createRecipe\") {\\n        var newRecipe = recipe,\\n            recipes = this.state.recipes.slice();\\n        recipes.push(newRecipe);\\n        this.setState({\\n          recipes: recipes,\\n          currentView: \"allRecipies\"\\n        });\\n      } else if (this.state.currentView === \"editRecipe\") {\\n        var editedRecipe = recipe,\\n            _recipes = this.state.recipes.slice(),\\n            currentIndex = _recipes.findIndex(function (recipe) {\\n          return recipe.id === editedRecipe.id;\\n        });\\n\\n        _recipes[currentIndex] = editedRecipe;\\n\\n        this.setState({\\n          recipes: _recipes,\\n          currentView: \"allRecipies\"\\n        });\\n      }\\n      //Return to normal view \\n    }\\n  }, {\\n    key: \\'render\\',\\n    value: function render() {\\n      var _this2 = this;\\n\\n      if (this.state.currentView === \"allRecipies\") {\\n        var recipes = this.state.recipes.map(function (recipe, index) {\\n          return _react2.default.createElement(_RecipeItem.RecipeItem, { onClick: _this2.showRecipe, recipe: recipe, key: index });\\n        });\\n        return _react2.default.createElement(\\n          \\'div\\',\\n          null,\\n          _react2.default.createElement(\\n            \\'div\\',\\n            { id: \\'recipe-book\\' },\\n            recipes\\n          ),\\n          _react2.default.createElement(\\n            \\'button\\',\\n            { className: \\'recipe-button\\', onClick: this.createRecipe },\\n            \\'+\\'\\n          )\\n        );\\n      } else if (this.state.currentView === \"createRecipe\") {\\n        return _react2.default.createElement(_RecipeForm.RecipeForm, { recipe: this.state.newRecipe\\n          // newIngredientName={this.state.newIngredientName}\\n          , onChange: this.handleInputChanged,\\n          onClick: this.addIngredient,\\n          onDelete: this.ingredientOnDelete,\\n          onSubmit: this.onSubmit });\\n      } else if (this.state.currentView === \"viewRecipe\") {\\n        return _react2.default.createElement(_RecipeView.RecipeView, { recipe: this.state.selectedRecipe, onClick: this.editRecipe });\\n      } else if (this.state.currentView === \"editRecipe\") {\\n        return _react2.default.createElement(_RecipeForm.RecipeForm, { recipe: this.state.selectedRecipe,\\n          newIngredientName: this.state.newIngredientName,\\n          onChange: this.handleInputChanged,\\n          onClick: this.addIngredient,\\n          onDelete: this.ingredientOnDelete,\\n          onSubmit: this.onSubmit });\\n      }\\n    }\\n  }]);\\n\\n  return RecipePage;\\n}(_react2.default.Component);\\n\\n// ========================================\\n\\n_reactDom2.default.render(_react2.default.createElement(RecipePage, null), document.getElementById(\\'root\\'));\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///33\\n')}});","extractedComments":[]}